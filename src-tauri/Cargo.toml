[package]
name = "uclean"
version = "0.2.0"
description = "UCLEAN Invoice Generation System"
authors = ["UCLEAN Team"]
license = "MIT"
repository = ""
default-run = "uclean"
edition = "2021"
rust-version = "1.60"

[profile.dev]
debug = 1                    # Minimal debug info to prevent PDB limit errors
opt-level = 1                # Slight optimization for better performance
incremental = false          # Disable incremental compilation to prevent PDB accumulation
codegen-units = 1           # Reduce parallelization to prevent concurrent PDB access
split-debuginfo = "packed"   # Better PDB handling on Windows

[profile.dev-fast]
inherits = "dev"
debug = 0                    # No debug info for fastest builds
incremental = false

[build-dependencies]
tauri-build = { version = "1.5.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.5.4", features = [ "dialog-save", "window-unmaximize", "fs-read-dir", "dialog-confirm", "fs-copy-file", "window-close", "window-unminimize", "fs-rename-file", "path-all", "window-start-dragging", "fs-remove-dir", "fs-create-dir", "window-minimize", "dialog-ask", "fs-remove-file", "fs-exists", "dialog-message", "dialog-open", "fs-read-file", "window-hide", "window-show", "fs-write-file", "window-maximize", "shell-open"] }
tokio = { version = "1.0", features = ["full"] }
sqlx = { version = "0.7", features = ["runtime-tokio-rustls", "sqlite", "chrono", "uuid"] }
anyhow = "1.0"
thiserror = "1.0"
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.0", features = ["v4", "serde"] }
log = "0.4"
env_logger = "0.10"
rust_decimal = { version = "1.32", features = ["serde-float"] }
regex = "1.10"
tera = "1.19"
urlencoding = "2.1"
lettre = { version = "0.11", features = ["smtp-transport", "pool", "hostname", "builder", "tokio1-native-tls"] }
base64 = "0.21"
mime = "0.3"
dirs = "5.0"
tokio-stream = "0.1"

[dev-dependencies]
tempfile = "3.8"
tokio-test = "0.4"

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = ["custom-protocol"]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
